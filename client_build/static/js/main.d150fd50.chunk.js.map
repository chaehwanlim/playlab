{"version":3,"sources":["components/AppBar.js","components/Home.js","components/Search/Music.js","components/Search/Movie.js","components/Search/Book.js","components/footer.js","components/Search/Search.js","components/Popular/MusicPopular.js","components/Popular/MoviePopular.js","components/Popular/BookPopular.js","components/Popular/Popular.js","components/PlaylistAdd/MusicAdd.js","components/PlaylistAdd/MovieAdd.js","components/PlaylistAdd/BookAdd.js","components/PlaylistAdd/PlaylistAdd.js","components/store.js","components/Login.js","components/MyPage/MyMusic.js","components/MyPage/MyMovie.js","components/MyPage/MyBook.js","components/MyPage/MyPage.js","serviceWorker.js","index.js","App.js"],"names":["_AppBar","ContentColor","color","textShadow","useState","window","location","pathname","setColor","console","log","className","AppBar","position","Container","maxWidth","Toolbar","style","padding","Typography","to","onClick","IconButton","fontSize","Home","backgroundColor","fontWeight","textAlign","top","href","target","rel","MusicTable","musicDB","setMusicDB","searchKeyword","setSearchKeyword","useEffect","fetch","then","res","json","catch","err","noValidate","autoComplete","onSubmit","e","preventDefault","Paper","component","variant","InputBase","placeholder","inputProps","value","onChange","type","aria-label","TableContainer","Table","stickyHeader","TableBody","filter","datum","title","indexOf","artist","userName","map","TableRow","TableCell","id","categoryName","genre","transmediaName","Movie","movieDB","setMovieDB","event","Grid","container","spacing","actor","item","xs","md","src","imageURL","alt","year","director","userRating","Book","bookDB","setBookDB","removeTags","str","replace","author","description","footer","marginTop","Search","musicContent","subtitle","movieContent","bookContent","content","setContent","Fab","Divider","MusicPopular","category","setCategory","selectedCat","setSelectedCat","Card","Select","labelId","name","cat","MenuItem","index","scope","paddingLeft","Button","urlWithID","Axios","method","url","status","alert","handleLikes","musicID","likes","MoviePopular","movieID","BookPopular","removeBTags","bookID","Popular","MusicAdd","transmedia","setTransmedia","form","setForm","handleInput","nextState","addMusic","data","adderID","sessionStorage","getItem","categoryID","trnasmediaID","transmediaID","initializeForm","InputProps","InputLabelProps","undefined","assign","TextField","label","required","trans","MovieAdd","search","setSearch","isSearched","setIsSearched","searchResult","setSearchResult","selectedMovie","setSelectedMovie","searchMovie","items","addMovie","movie","key","image","pubDate","handleMovieSelect","BookAdd","selectedBook","setSelectedBook","searchBook","addBook","book","handleBookSelect","PlaylistAdd","createStore","state","action","__REDUX_DEVTOOLS_EXTENSION__","Login","userPassword","login","setLogin","register","setRegister","InputLabelProps2","handleLoginInput","loginProcess","code","store","dispatch","setItem","userID","handleRegisterInput","registerProcess","fontFamily","MyMusic","props","myMusic","setMyMusic","getDB","minWidth","handleDeletion","MyMovie","myMovie","setMyMovie","Mybook","myBook","setMyBook","MyPage","user","setUser","userInfo","setUserInfo","handleLogout","removeItem","elevation","Boolean","hostname","match","theme","createMuiTheme","typography","palette","primary","main","secondary","light","contrastText","ReactDOM","render","exact","path","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d150fd50.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AddIcon from '@material-ui/icons/AddRounded';\r\nimport StarIcon from '@material-ui/icons/StarRounded';\r\nimport SearchIcon from '@material-ui/icons/SearchRounded';\r\nimport AccountCircle from '@material-ui/icons/AccountCircle';\r\nimport Container from '@material-ui/core/Container';\r\nimport { Link } from \"react-router-dom\";\r\nimport './styles/AppBar.scss';\r\n\r\n\r\nexport default function _AppBar() {\r\n  const HomeColor = {color : 'white'};\r\n  const ContentColor = {color : 'black', textShadow: '-1px 0 #F2F1F6, 0 1px #F2F1F6, 1px 0 #F2F1F6, 0 -1px #F2F1F6'};\r\n  var [color, setColor] = useState((window.location.pathname === \"/\") ? HomeColor : ContentColor);\r\n\r\n  console.log('appBar rendered');\r\n  return (\r\n    <div className=\"appBar\">\r\n      <AppBar position=\"static\" className=\"appBarBackground\">\r\n        <Container maxWidth=\"lg\">\r\n          <Toolbar style={{padding: '0rem'}}>\r\n            <Typography className=\"title\">\r\n              <Link to=\"/\" className=\"link\" onClick={() => {setColor({color : 'white'})}}\r\n                style={color}>\r\n                PlayLab\r\n              </Link>\r\n            </Typography>\r\n            \r\n            <Link to=\"/Search\" onClick={() => {setColor(ContentColor)}}>\r\n              <IconButton style={color}><SearchIcon style={{fontSize: '2.2rem'}}/></IconButton>\r\n            </Link>\r\n            <Link to=\"/Popular\" onClick={() => {setColor(ContentColor)}}>\r\n              <IconButton style={color}><StarIcon style={{fontSize: '2.2rem'}}/></IconButton>\r\n            </Link>\r\n            <Link to=\"/PlaylistAdd\" onClick={() => {setColor(ContentColor)}}>\r\n              <IconButton style={color}><AddIcon style={{fontSize: '2.2rem'}}/></IconButton>\r\n            </Link>\r\n            <Link to=\"/MyPage\" onClick={() => {setColor(ContentColor)}}>\r\n              <IconButton style={color}><AccountCircle style={{fontSize: '2.2rem'}}/></IconButton>\r\n            </Link>\r\n\r\n          </Toolbar>\r\n        </Container>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport './styles/Home.scss';\r\n\r\n\r\nconst footer = () => {\r\n    return (\r\n        <footer style={{backgroundColor: 'whitesmoke', color: 'grey', fontSize: '1.4rem', fontWeight: '500', textAlign: 'center', position: 'absolute', top: '100%'}}>\r\n            <p>Copyright © 2020 PlayLab</p>\r\n            <p>Contact webmaster for more information. <a href=\"mailto: chlim428@gmail.com\" color=\"black\">chlim428@gmail.com</a></p>\r\n            <p><a href=\"https://github.com/chaehwanlim/playlab\" color=\"black\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a></p>\r\n        </footer>\r\n    )\r\n}\r\n\r\nexport default function Home() {\r\n    return (\r\n        <div className=\"background\">\r\n            <Container maxWidth=\"lg\">\r\n                <div className=\"title\">\r\n                    PlayLab\r\n                </div>\r\n                <div className=\"subtitle\">\r\n                    감동적인 작품을 모두와 함께\r\n                </div>\r\n            </Container>\r\n            {footer()}\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/SearchRounded';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport '../styles/media.css';\r\nimport '../styles/Content.scss';\r\nimport '../styles/Table.scss';\r\n\r\n\r\nexport default function MusicTable() {\r\n    var [musicDB, setMusicDB] = useState([]);\r\n    var [searchKeyword, setSearchKeyword] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        fetch('/api/musicDB')\r\n            .then(res => res.json())\r\n            .then(res => setMusicDB(res))\r\n            .catch(err => console.log(err))\r\n    }, []);\r\n\r\n    const handleValueChange = (e) => {\r\n        setSearchKeyword(e.target.value);\r\n    }\r\n\r\n    const handleClick = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const filterData = (data) => {\r\n        data = data.filter((datum) => {\r\n            return (\r\n                (datum.title.indexOf(searchKeyword) > -1) || \r\n                (datum.artist.indexOf(searchKeyword) > -1) ||\r\n                (datum.userName.indexOf(searchKeyword) > -1)\r\n            );\r\n        });\r\n        return data.map(datum => {\r\n            return (\r\n                <TableRow>\r\n                    <TableCell className=\"tableData\">\r\n                        <span className=\"title\">{datum.title}</span><br></br>{datum.artist}\r\n                    </TableCell>\r\n                    <TableCell className=\"tableData\" id=\"category\">\r\n                        {datum.userName} 님의 <br />{datum.categoryName} 음악\r\n                    </TableCell>\r\n                    <TableCell className=\"tableData2\">{datum.genre}</TableCell>\r\n                    <TableCell className=\"tableData2\">{datum.transmediaName}</TableCell>\r\n                </TableRow>\r\n            )\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form noValidate autoComplete=\"off\" className=\"form\" onSubmit={handleClick}>\r\n                <Paper component=\"form\" className=\"searchBar\" variant=\"outlined\">\r\n                    <InputBase\r\n                        className=\"input\"\r\n                        placeholder=\"검색할 내용을 입력하세요\"\r\n                        inputProps={{ 'aria-label': 'searchKeyword' }}\r\n                        value={searchKeyword}\r\n                        onChange={handleValueChange}\r\n                    />\r\n                    <IconButton type=\"submit\" className=\"iconButton\" aria-label=\"searchKeyword\">\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n                </Paper>\r\n            </form>\r\n            <Paper className=\"table\">\r\n            <TableContainer className=\"tableContainer\">\r\n                <Table stickyHeader aria-label=\"sticky table\">\r\n                    {/* <TableHead>\r\n                    <TableRow>\r\n                        {attributes.map(column => (\r\n                            <TableCell\r\n                                key={column.id}\r\n                                style={{ minWidth: column.minWidth }}\r\n                                className={classes.tableAttribute}>\r\n                                {column.label}\r\n                            </TableCell>\r\n                        ))}\r\n                    </TableRow>\r\n                    </TableHead> */}\r\n                    <TableBody>\r\n                    {musicDB ? filterData(musicDB) : <TableRow>error ocurred</TableRow>}\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/SearchRounded';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport '../styles/Content.scss';\r\nimport '../styles/Movie.scss';\r\n\r\n\r\nexport default function Movie() {\r\n    var [movieDB, setMovieDB] = useState([]);\r\n    var [searchKeyword, setSearchKeyword] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        fetch('/api/movieDB')\r\n            .then(res => res.json())\r\n            .then(res => setMovieDB(res))\r\n            .catch(err => console.log(err))\r\n    }, []);\r\n\r\n    const handleValueChange = (e) => {\r\n        setSearchKeyword(e.target.value);\r\n    }\r\n\r\n    const handleClick = event => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    const filterData = (data) => {\r\n        data = data.filter((datum) => {\r\n            return (\r\n                (datum.title.indexOf(searchKeyword) > -1) ||\r\n                (datum.actor.indexOf(searchKeyword) > -1) ||\r\n                (datum.userName.indexOf(searchKeyword) > -1)\r\n            );\r\n        });\r\n        return data.map(datum => {\r\n            return (\r\n                <Grid item xs={12} md={6}>\r\n                    <div className=\"movie\">\r\n                        <Grid item xs={4}>\r\n                        <div className=\"moviePosterAlign\">\r\n                            <img className=\"moviePoster\" src={datum.imageURL} title={datum.title} alt={datum.title}/>\r\n                        </div>\r\n                        </Grid>\r\n                        <Grid item xs={8}>\r\n                            <div className=\"movieTitle\">\r\n                                <span>{datum.title}\r\n                                <span className=\"movieYear\">{datum.year}</span>\r\n                                </span>\r\n                            </div>\r\n                            <div className=\"movieInfo\">\r\n                                <b>감독</b>  {datum.director}<br />\r\n                                <b>출연</b>  {datum.actor}<br />\r\n                                <b>평점</b>  {datum.userRating}<br />\r\n                                <b>트랜스미디어</b>  {datum.transmediaName}\r\n                            </div>\r\n                            <div className=\"movieCategory\">\r\n                                <b>{datum.userName}</b> 님의<br />\r\n                                <b>{datum.categoryName}</b> 영화입니다.<br />\r\n                            </div>\r\n                        </Grid>\r\n                    </div>\r\n                </Grid>\r\n            );\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form noValidate autoComplete=\"off\" className=\"form\" onSubmit={handleClick}>\r\n                <Paper component=\"form\" className=\"searchBar\" variant=\"outlined\">\r\n                    <InputBase\r\n                        className=\"input\"\r\n                        placeholder=\"검색할 내용을 입력하세요\"\r\n                        inputProps={{ 'aria-label': 'searchKeyword' }}\r\n                        value={searchKeyword}\r\n                        onChange={handleValueChange}\r\n                    />\r\n                    <IconButton type=\"submit\" className=\"iconButton\" aria-label=\"searchKeyword\">\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n                </Paper>\r\n            </form>\r\n            <br /><br />\r\n            <Grid container spacing={4}>\r\n            {movieDB ? filterData(movieDB) : <span>error occured</span>}\r\n            </Grid>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React, { useState, useEffect } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport SearchIcon from '@material-ui/icons/SearchRounded';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport '../styles/Book.scss';\r\n\r\n\r\nexport default function Book() {\r\n    var [bookDB, setBookDB] = useState([]);\r\n    var [searchKeyword, setSearchKeyword] = useState(\"\");\r\n\r\n    useEffect(function fetchBookDB() {\r\n        fetch('/api/bookDB')\r\n        .then(res => res.json())\r\n        .then(res => setBookDB(res))\r\n        .catch(err => console.log(err));\r\n    }, []);\r\n\r\n    const handleValueChange = (e) => {\r\n        setSearchKeyword(e.target.value);\r\n    }\r\n\r\n    const handleClick = event => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    const filterData = (data) => {\r\n        data = data.filter((datum) => {\r\n            return (\r\n                (datum.title.indexOf(searchKeyword) > -1) ||\r\n                (datum.author.indexOf(searchKeyword) > -1) ||\r\n                (datum.userName.indexOf(searchKeyword) > -1)\r\n            );\r\n        });\r\n        return data.map(datum => {\r\n            return (\r\n                <Grid item xs={12}>\r\n                    <div className=\"book\">\r\n                        <Grid item xs={4} md={2}>\r\n                        <div className=\"bookCoverAlign\">\r\n                            <img className=\"bookCover\" src={datum.imageURL} alt={datum.title}/>\r\n                        </div>\r\n                        </Grid>\r\n                        <Grid item xs={8} md={4}>\r\n                            <div className=\"bookTitle\">\r\n                                {datum.title}\r\n\r\n                            </div>\r\n                            <div className=\"bookInfo\">\r\n                                <b>작가</b>  {datum.author}<br />\r\n                                <b>트랜스미디어</b>  {datum.transmediaName}<br />\r\n                            </div>\r\n                            <div className=\"bookCategory\">\r\n                                <b>{datum.userName}</b> 님의<br />\r\n                                <b>{datum.categoryName}</b> 책입니다.<br />\r\n                            </div>\r\n                        </Grid>\r\n                        <Grid item xs={12} md={6}>\r\n                            <div className=\"bookDesc\">\r\n                                {removeTags(datum.description)}\r\n                            </div>\r\n                        </Grid>\r\n                    </div>\r\n                </Grid>\r\n            );\r\n        });\r\n    }\r\n\r\n    const removeTags = (str) => {\r\n        str = str.replace(/<b>/g, \"\");\r\n        return str.replace(/<\\/b>/g, \"\");\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form noValidate autoComplete=\"off\" className=\"form\" onSubmit={handleClick}>\r\n                <Paper component=\"form\" className=\"searchBar\" variant=\"outlined\">\r\n                    <InputBase\r\n                        className=\"input\"\r\n                        placeholder=\"검색할 내용을 입력하세요\"\r\n                        inputProps={{ 'aria-label': 'searchKeyword' }}\r\n                        value={searchKeyword}\r\n                        onChange={handleValueChange}\r\n                    />\r\n                    <IconButton type=\"submit\" className=\"iconButton\" aria-label=\"searchKeyword\">\r\n                        <SearchIcon />\r\n                    </IconButton>\r\n                </Paper>\r\n            </form>\r\n            <br /><br />\r\n            <Grid container spacing={5}>\r\n            {bookDB ? filterData(bookDB) : <span>error occured</span>}\r\n            </Grid>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport default function footer() {\r\n  return (\r\n    <footer style={{backgroundColor: 'whitesmoke', color: 'grey', fontSize: '1.4rem', fontWeight: '500', textAlign: 'center', marginTop: '4rem'}}>\r\n        <p>Copyright © 2020 PlayLab</p>\r\n        <p>Contact webmaster for more information. <a href=\"mailto: chlim428@gmail.com\" color=\"black\">chlim428@gmail.com</a></p>\r\n        <p><a href=\"https://github.com/chaehwanlim/playlab\" color=\"black\" target=\"_blank\" rel=\"noopener noreferrer\">GitHub</a></p>\r\n    </footer>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Music from './Music';\r\nimport Movie from './Movie';\r\nimport Book from './Book';\r\nimport Footer from '../footer';\r\nimport '../styles/Content.scss';\r\n\r\n\r\nexport default function Search() {\r\n    const musicContent = {\r\n        title: \"음악 검색하기\",\r\n        component: <Music />,\r\n        subtitle: \"음악의 제목, 아티스트, 등록한 유저 이름으로 검색하세요.\"\r\n    };\r\n    const movieContent = {\r\n        title: \"영화 검색하기\",\r\n        component: <Movie />,\r\n        subtitle: \"영화의 제목, 출연 배우, 등록한 유저 이름으로 검색하세요.\"\r\n    };\r\n    const bookContent = {\r\n        title: \"책 검색하기\",\r\n        component: <Book />,\r\n        subtitle: \"책의 제목, 작가, 등록한 유저 이름으로 검색하세요.\"\r\n    };\r\n\r\n    var [content, setContent] = useState(movieContent);\r\n\r\n    const handleMusic = (e) => {\r\n        e.preventDefault();\r\n        setContent(musicContent)\r\n    }\r\n    const handleMovie = (e) => {\r\n        e.preventDefault();\r\n        setContent(movieContent)\r\n    }\r\n    const handleBook = (e) => {\r\n        e.preventDefault();\r\n        setContent(bookContent)\r\n    }\r\n\r\n    return (\r\n        <div className=\"header\">\r\n        <Container maxWidth=\"lg\">\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={9}>\r\n                    <header className=\"title\">{content.title}</header>\r\n                    <p className=\"subtitle\">{content.subtitle}</p>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <div className=\"btnAlign\">\r\n                    <Fab variant=\"extended\" className=\"mediaBtn\" id=\"music\" onClick = {handleMusic}>\r\n                        음악\r\n                    </Fab>\r\n                    <Fab variant=\"extended\" className=\"mediaBtn\" id=\"movie\" onClick = {handleMovie}>\r\n                        영화\r\n                    </Fab>\r\n                    <Fab variant=\"extended\" className=\"mediaBtn\" id=\"book\" onClick = {handleBook}>\r\n                        책\r\n                    </Fab>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n        <Divider className=\"divider\"/>\r\n        <Container maxWidth=\"lg\">\r\n            {content.component}\r\n        </Container>\r\n        <Footer />\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Card from '@material-ui/core/Card';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport ThumbUp from '@material-ui/icons/ThumbUp';\r\nimport Axios from 'axios';\r\nimport '../styles/Content.scss';\r\nimport '../styles/Table.scss';\r\n\r\n\r\nexport default function MusicPopular() {\r\n  var [musicDB, setMusicDB] = useState([]);\r\n  var [category, setCategory] = useState([]);\r\n  var [selectedCat, setSelectedCat] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch('/api/musicPopular')\r\n      .then(res => res.json())\r\n      .then(res => setMusicDB(res))\r\n      .catch(err => console.log(err))\r\n    fetch('/api/categoryDB')\r\n      .then(res => res.json())\r\n      .then(res => setCategory(res))\r\n      .catch(err => console.log(err))\r\n  }, []);\r\n\r\n  const handleCategory = (e) => {\r\n    e.preventDefault();\r\n    console.log(e.target.value);\r\n    setSelectedCat(e.target.value);\r\n  }\r\n\r\n  const handleLikes = (id) => {\r\n    const urlWithID = '/api/popular/like/increment/' + id\r\n    Axios({\r\n      method: 'put',\r\n      url: urlWithID,\r\n    })\r\n    .then(res => {\r\n      if(res.status === 200){\r\n        alert('성공적으로 추천했습니다!');\r\n        fetch('/api/musicPopular')\r\n          .then(res => res.json())\r\n          .then(res => setMusicDB(res))\r\n          .catch(err => console.log(err))\r\n      }\r\n    })\r\n    .catch(err => console.log(err));\r\n  }\r\n\r\n  const filterData = (data) => {\r\n    data = data.filter((datum) => {\r\n      return (\r\n        (datum.categoryName.indexOf(selectedCat) > -1)\r\n      );\r\n    });\r\n    return data.map((datum, index) => {\r\n      return (\r\n        <TableRow>\r\n          <TableCell className=\"tableData\" component=\"th\" scope=\"row\" id=\"ranking\">{index + 1}</TableCell>\r\n          <TableCell className=\"tableData\" style={{paddingLeft: '1rem'}}>\r\n              <span className=\"title\">{datum.title}</span><br></br>{datum.artist}\r\n          </TableCell>\r\n          <TableCell className=\"tableData\" id=\"category\">\r\n              {datum.userName} 님의<br />{datum.categoryName} 음악\r\n          </TableCell>\r\n          <TableCell className=\"tableData\">\r\n            <Button variant=\"contained\" className=\"musicLikes\"\r\n            onClick={() => {handleLikes(datum.musicID)}}\r\n            ><ThumbUp />&nbsp;{datum.likes}</Button>\r\n          </TableCell>\r\n          <TableCell className=\"tableData2\">{datum.genre}</TableCell>\r\n          <TableCell className=\"tableData2\">{datum.transmediaName}</TableCell>\r\n        </TableRow>\r\n      )\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"filter\">\r\n        <div className=\"category\" id=\"music\">\r\n        <Select labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              value={selectedCat}\r\n              onChange={handleCategory}\r\n              name=\"category\"\r\n              style={{fontSize: '1.7rem', fontWeight: '500', color: '#018DFF'}}>\r\n              {category ? category.map(cat => {\r\n                return (\r\n                  <MenuItem value={cat.categoryName} style={{fontSize: '1.7rem', fontWeight: '500'}}>\r\n                    {cat.categoryName}</MenuItem>\r\n                )\r\n              }) : \"error occured\"}\r\n        </Select>\r\n      &nbsp; 음악의 인기 차트</div>\r\n      </Card>\r\n      <Paper className=\"table\">\r\n        <TableContainer className=\"tableContainer\">\r\n          <Table stickyHeader aria-label=\"sticky table\">\r\n            <TableBody>\r\n            {musicDB ? filterData(musicDB) : <TableRow>error ocurred</TableRow>}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Paper>\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport Select from '@material-ui/core/Select';\r\nimport Button from '@material-ui/core/Button';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport ThumbUp from '@material-ui/icons/ThumbUp';\r\nimport Axios from 'axios';\r\nimport '../styles/Content.scss';\r\nimport '../styles/Movie.scss';\r\n\r\n\r\nexport default function MoviePopular() {\r\n  var [movieDB, setMovieDB] = useState([]);\r\n  var [category, setCategory] = useState([]);\r\n  var [selectedCat, setSelectedCat] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch('/api/moviePopular')\r\n      .then(res => res.json())\r\n      .then(res => setMovieDB(res))\r\n      .catch(err => console.log(err))\r\n    fetch('/api/categoryDB')\r\n      .then(res => res.json())\r\n      .then(res => setCategory(res))\r\n      .catch(err => console.log(err))\r\n  }, []);\r\n\r\n  const filterData = (data) => {\r\n    data = data.filter((datum) => {\r\n      return (\r\n        (datum.categoryName.indexOf(selectedCat) > -1)\r\n      );\r\n    });\r\n    return data.map((datum, index) => {\r\n      return (\r\n        <Grid item xs={12} md={6}>\r\n            <div className=\"movie\">\r\n                <Grid item xs={4}>\r\n                <div className=\"moviePosterAlign\">\r\n                    <img className=\"moviePoster\" src={datum.imageURL} title={datum.title} alt={datum.title}/>\r\n                    <Button variant=\"contained\" className=\"movieLikes\"\r\n                      onClick={() => {handleLikes(datum.movieID)}}\r\n                      ><ThumbUp />&nbsp;{datum.likes}</Button>\r\n                </div>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                    <div className=\"movieTitle\">\r\n                      <span style={{color: 'orange'}}>{index + 1}&nbsp;&nbsp;</span>\r\n                      <span>{datum.title}\r\n                      <span className=\"movieYear\">{datum.year}</span>\r\n                      </span>\r\n                    </div>\r\n                    <div className=\"movieInfo\">\r\n                        <b>감독</b>  {datum.director}<br />\r\n                        <b>출연</b>  {datum.actor}<br />\r\n                        <b>평점</b>  {datum.userRating}<br />\r\n                        <b>트랜스미디어</b>  {datum.transmediaName}\r\n                    </div>\r\n                    <div className=\"movieCategory\">\r\n                        <b>{datum.userName}</b> 님의<br />\r\n                        <b>{datum.categoryName}</b> 영화입니다.<br />\r\n                    </div>\r\n                </Grid>\r\n            </div>\r\n        </Grid>\r\n      )\r\n    });\r\n  }\r\n\r\n  const handleCategory = (e) => {\r\n    e.preventDefault();\r\n    console.log(e.target.value);\r\n    setSelectedCat(e.target.value);\r\n  }\r\n\r\n  const handleLikes = (id) => {\r\n    const urlWithID = '/api/popular/like/increment/' + id\r\n    Axios({\r\n      method: 'put',\r\n      url: urlWithID,\r\n    })\r\n    .then(res => {\r\n      if(res.status === 200){\r\n        alert('성공적으로 추천했습니다!');\r\n        fetch('/api/moviePopular')\r\n          .then(res => res.json())\r\n          .then(res => setMovieDB(res))\r\n          .catch(err => console.log(err))\r\n      }\r\n    })\r\n    .catch(err => console.log(err));\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"filter\">\r\n        <div className=\"category\" id=\"movie\">\r\n          <Select labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={selectedCat}\r\n            onChange={handleCategory}\r\n            name=\"category\"\r\n            style={{fontSize: '1.7rem', fontWeight: '500', color: '#FF4444'}}>\r\n            {category ? category.map(cat => {\r\n              return (\r\n                <MenuItem value={cat.categoryName} style={{fontSize: '1.7rem', fontWeight: '500'}}>\r\n                  {cat.categoryName}</MenuItem>\r\n              )\r\n            }) : \"error occured\"}\r\n          </Select>\r\n      &nbsp; 영화의 인기 차트</div>\r\n      </Card>\r\n      <br />\r\n      <Grid container spacing={4}>\r\n        {movieDB ? filterData(movieDB) : <div>error ocurred</div>}\r\n      </Grid>\r\n    </div>\r\n  )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Card from '@material-ui/core/Card';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Button from '@material-ui/core/Button';\r\nimport ThumbUp from '@material-ui/icons/ThumbUp';\r\nimport Axios from 'axios';\r\nimport '../styles/Content.scss';\r\nimport '../styles/Book.scss';\r\n\r\n\r\nexport default function BookPopular() {\r\n  var [bookDB, setBookDB] = useState([]);\r\n  var [category, setCategory] = useState([]);\r\n  var [selectedCat, setSelectedCat] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    fetch('/api/bookPopular')\r\n      .then(res => res.json())\r\n      .then(res => setBookDB(res))\r\n      .catch(err => console.log(err))\r\n    fetch('/api/categoryDB')\r\n      .then(res => res.json())\r\n      .then(res => setCategory(res))\r\n      .catch(err => console.log(err))\r\n  }, []);\r\n\r\n  const handleLikes = (id) => {\r\n    const urlWithID = '/api/popular/like/increment/' + id\r\n    Axios({\r\n      method: 'put',\r\n      url: urlWithID,\r\n    })\r\n    .then(res => {\r\n      if(res.status === 200){\r\n        alert('성공적으로 추천했습니다!');\r\n        fetch('/api/bookPopular')\r\n          .then(res => res.json())\r\n          .then(res => setBookDB(res))\r\n          .catch(err => console.log(err))\r\n      }\r\n    })\r\n    .catch(err => console.log(err));\r\n  }\r\n\r\n  const removeBTags = (str) => {\r\n    str = str.replace(/<b>/g, \"\");\r\n    return str.replace(/<\\/b>/g, \"\");\r\n  }\r\n\r\n  const filterData = (data) => {\r\n    data = data.filter((datum) => {\r\n      return (\r\n        (datum.categoryName.indexOf(selectedCat) > -1)\r\n      );\r\n    });\r\n    return data.map((datum, index) => {\r\n      return (\r\n        <Grid item xs={12}>\r\n          <div className=\"book\">\r\n            <Grid item xs={4} md={2}>\r\n            <div className=\"bookCoverAlign\">\r\n                <img className=\"bookCover\" src={datum.imageURL} alt={datum.title}/>\r\n                <Button variant=\"contained\" className=\"bookLikes\"\r\n                  onClick={() => {handleLikes(datum.bookID)}}\r\n                  ><ThumbUp />&nbsp;{datum.likes}</Button>\r\n            </div>\r\n            </Grid>\r\n            <Grid item xs={8} md={4}>\r\n              <div className=\"bookTitle\">\r\n                <span style={{color: 'orange'}}>{index + 1}&nbsp;&nbsp;</span>\r\n                {removeBTags(datum.title)}&nbsp;&nbsp;\r\n              </div>\r\n              <div className=\"bookInfo\">\r\n                <b>작가</b>  {datum.author}<br />\r\n                <b>트랜스미디어</b>  {datum.transmediaName}<br />\r\n              </div>\r\n              <div className=\"bookCategory\">\r\n                <b>{datum.userName}</b> 님의<br />\r\n                <b>{datum.categoryName}</b> 책입니다.<br />\r\n              </div>\r\n            </Grid>\r\n            <Grid item xs={12} md={6}>\r\n              <div className=\"bookDesc\">\r\n                  {removeBTags(datum.description)}\r\n              </div>\r\n            </Grid>\r\n            \r\n          </div>\r\n        </Grid>\r\n      )\r\n    });\r\n  }\r\n\r\n  const handleCategory = (e) => {\r\n    e.preventDefault();\r\n    console.log(e.target.value);\r\n    setSelectedCat(e.target.value);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Card className=\"filter\">\r\n        <div className=\"category\" id=\"book\">\r\n        <Select labelId=\"demo-simple-select-label\"\r\n          id=\"demo-simple-select\"\r\n          value={selectedCat}\r\n          onChange={handleCategory}\r\n          name=\"category\"\r\n          style={{fontSize: '1.7rem', fontWeight: '500', color: '#1ABF80'}}>\r\n          {category ? category.map(cat => {\r\n            return (\r\n              <MenuItem value={cat.categoryName} style={{fontSize: '1.7rem', fontWeight: '500'}}>\r\n                {cat.categoryName}</MenuItem>\r\n            )\r\n          }) : \"error occured\"}\r\n        </Select>\r\n      &nbsp; 책의 인기 차트</div>\r\n      </Card>\r\n      <Grid container spacing={4}>\r\n        {bookDB ? filterData(bookDB) : <div>error ocurred</div>}\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n","import React, { useState } from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport MusicPopular from './MusicPopular';\r\nimport MoviePopular from './MoviePopular';\r\nimport BookPopular from './BookPopular'; \r\nimport Footer from '../footer';\r\nimport '../styles/Content.scss';\r\n\r\n\r\nexport default function Popular() {\r\n    const musicContent = {\r\n        title: \"음악 인기 차트\",\r\n        component: <MusicPopular />\r\n    };\r\n    const movieContent = {\r\n        title: \"영화 인기 차트\",\r\n        component: <MoviePopular />\r\n    };\r\n    const bookContent = {\r\n        title: \"책 인기 차트\",\r\n        component: <BookPopular />\r\n    };\r\n\r\n    var [content, setContent] = useState(movieContent);\r\n\r\n    const handleMusic = (e) => {\r\n        e.preventDefault();\r\n        setContent(musicContent);\r\n    }\r\n    const handleMovie = (e) => {\r\n        e.preventDefault();\r\n        setContent(movieContent);\r\n    }\r\n    const handleBook = (e) => {\r\n        e.preventDefault();\r\n        setContent(bookContent);\r\n    }\r\n\r\n    return (\r\n        <div className=\"header\">\r\n        <Container maxWidth=\"lg\">\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={9}>\r\n                    <header className=\"title\">{content.title}</header>\r\n                    <p className=\"subtitle\">인기 차트를 통해 취향에 맞는 작품을 찾아보세요.</p>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <div className=\"btnAlign\">\r\n                    <Fab variant=\"extended\" className=\"mediaBtn\" id=\"music\" onClick = {handleMusic}>\r\n                        음악\r\n                    </Fab>\r\n                    <Fab variant=\"extended\" className=\"mediaBtn\" id=\"movie\" onClick = {handleMovie}>\r\n                        영화\r\n                    </Fab>\r\n                    <Fab variant=\"extended\" className=\"mediaBtn\" id=\"book\" onClick = {handleBook}>\r\n                        책\r\n                    </Fab>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n        <Divider className=\"divider\"/>\r\n        <Container maxWidth=\"lg\">\r\n            {content.component}\r\n        </Container>\r\n        <Footer />\r\n        </div>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Axios from 'axios';\r\nimport '../styles/Add.scss';\r\n\r\n\r\nexport default function MusicAdd() {\r\n    var [category, setCategory] = useState([]);\r\n    var [transmedia, setTransmedia] = useState([]);\r\n\r\n    useEffect(() => {\r\n        fetch('/api/categoryDB')\r\n            .then(res => res.json())\r\n            .then(res => setCategory(res))\r\n            .catch(err => console.log(err))\r\n        fetch('/api/transmediaDB')\r\n            .then(res => res.json())\r\n            .then(res => setTransmedia(res))\r\n            .catch(err => console.log(err))\r\n    }, []);\r\n\r\n    var [form, setForm] = useState({\r\n        title : \"\",\r\n        artist: \"\",\r\n        genre: \"\",\r\n        category: 100,\r\n        transmedia: 10000,\r\n    });\r\n\r\n    const handleInput = (e) => {\r\n        e.preventDefault();\r\n        let nextState = form;\r\n        nextState[e.target.name] = e.target.value;\r\n        setForm(nextState);\r\n    }\r\n    const handleCategory = (e) => {\r\n        e.preventDefault();\r\n        setForm({\r\n            ...form,\r\n            category : e.target.value\r\n        });\r\n    }\r\n    const handleTransmedia = (e) => {\r\n        e.preventDefault();\r\n        setForm({\r\n            ...form,\r\n            transmedia : e.target.value\r\n        });\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(form);\r\n        if(sessionStorage.userName) {\r\n            addMusic();\r\n        } else if (sessionStorage.userName === undefined) {\r\n            alert('로그인이 필요합니다!');\r\n            window.location.assign('/MyPage');\r\n        }\r\n        \r\n    }  \r\n\r\n    const addMusic = () => {\r\n        Axios({\r\n            method: 'post',\r\n            url:'/api/musicAdd',\r\n            data: {\r\n                title : form.title,\r\n                artist: form.artist,\r\n                genre : form.genre,\r\n                adderID : sessionStorage.getItem('userID'),\r\n                categoryID : form.category,\r\n                trnasmediaID : form.transmediaID\r\n            }\r\n        })\r\n        .then((res) => console.log(res))\r\n        .then((res) => alert('음악을 정상적으로 추가했습니다!'))\r\n        .catch((err) => console.log(err));\r\n\r\n        initializeForm();\r\n    }\r\n    const initializeForm = () => {\r\n        setForm({\r\n            title : \"\",\r\n            artist: \"\",\r\n            genre: \"\",\r\n            category: 100,\r\n            transmedia: 10000,\r\n        });\r\n        console.log('cleared');\r\n    }\r\n\r\n    const InputProps = { style: {fontSize: '2rem'}};\r\n    const InputLabelProps = { style: {fontSize: '1.7rem', color: 'primary'} }\r\n\r\n    return (\r\n        <Card className=\"card\">\r\n            <div className=\"formTitle\">\r\n                음악을 추가합니다.\r\n            </div>\r\n            <Divider/>\r\n            <form noValidate autoComplete=\"off\" className=\"form\" onSubmit={handleSubmit}>\r\n                <TextField id=\"standard-basic\" label=\"제목\" name=\"title\"\r\n                    inputProps={InputProps} InputLabelProps={InputLabelProps}\r\n                    required=\"true\" onChange={handleInput} /><br></br>\r\n                <TextField id=\"standard-basic\" label=\"아티스트\" name=\"artist\"\r\n                    inputProps={InputProps} InputLabelProps={InputLabelProps}\r\n                    required=\"true\" onChange={handleInput} /><br />\r\n                <TextField id=\"standard-basic\" label=\"장르\" name=\"genre\"\r\n                    inputProps={InputProps} InputLabelProps={InputLabelProps}\r\n                    onChange={handleInput} /><br />\r\n\r\n                {/* <InputLabel id=\"demo-simple-select-label\">느낌</InputLabel> */}\r\n                <div className=\"guide\"><br />이 음악은 &nbsp;\r\n                <Select labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={form.category}\r\n                    onChange={handleCategory}\r\n                    name=\"category\"\r\n                    style={{fontSize: '1.7rem'}}>\r\n                    {category ? category.map(cat => {\r\n                        return (\r\n                            <MenuItem value={cat.categoryID} style={{fontSize: '1.7rem', fontWeight: '500'}}>\r\n                                {cat.categoryName}</MenuItem>\r\n                        )\r\n                    }) : \"error occured\"}\r\n                </Select>\r\n                &nbsp;음악입니다.</div><br />\r\n\r\n                {/* <InputLabel id=\"demo-simple-select-label\">트랜스미디어</InputLabel> */}\r\n                <div className=\"guide\">트랜스미디어</div>\r\n                <Select labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={form.transmedia}\r\n                    onChange={handleTransmedia}\r\n                    name=\"transmedia\"\r\n                    style={{fontSize: '1.7rem'}}>\r\n                    {transmedia ? transmedia.map(trans => {\r\n                        return (\r\n                            <MenuItem value={trans.transmediaID} style={{fontSize: '1.7rem', fontWeight: '500'}}>\r\n                                {trans.transmediaName}</MenuItem>\r\n                        )\r\n                    }) : \"error occured\"}\r\n                </Select>\r\n\r\n                <Fab variant=\"extended\" className=\"submitBtn\" id=\"music\" type=\"submit\">추가하기</Fab>\r\n            </form>\r\n        </Card>\r\n    )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport SearchIcon from '@material-ui/icons/SearchRounded';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Axios from 'axios';\r\nimport '../styles/Add.scss';\r\nimport '../styles/Movie.scss';\r\n\r\n\r\nexport default function MovieAdd() {\r\n  var [search, setSearch] = useState(\"\");\r\n  var [isSearched, setIsSearched] = useState(false);\r\n  var [searchResult, setSearchResult] = useState([]);\r\n  var [selectedMovie, setSelectedMovie] = useState({\r\n    index: -1,\r\n    title: ''\r\n  });\r\n  var [form, setForm] = useState({\r\n    title: \"\",\r\n    director: \"\",\r\n    category: 100,\r\n    transmedia: 10000,\r\n    imageURL: \"\",\r\n    actor: \"\",\r\n    userRating: \"\",\r\n    year: \"\",\r\n  });\r\n  var [category, setCategory] = useState([]);\r\n  var [transmedia, setTransmedia] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('/api/categoryDB')\r\n      .then(res => res.json())\r\n      .then(res => setCategory(res))\r\n      .catch(err => console.log(err))\r\n    fetch('/api/transmediaDB')\r\n      .then(res => res.json())\r\n      .then(res => setTransmedia(res))\r\n      .catch(err => console.log(err))\r\n  }, []);\r\n\r\n  const handleValueChange = (e) => {\r\n    e.preventDefault();\r\n    setSearch(e.target.value);\r\n  }\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    console.log(search);\r\n    setIsSearched(true);\r\n    searchMovie();\r\n  }\r\n\r\n  const searchMovie = () => {\r\n    Axios({\r\n      method: 'get',\r\n      url: '/api/movieSearch/' + search,\r\n    })\r\n    .then(res => setSearchResult(res.data.items))\r\n    .catch(err => console.log(err));\r\n  }\r\n\r\n  const handleCategory = (e) => {\r\n    e.preventDefault();\r\n    setForm({\r\n      ...form,\r\n      category : e.target.value\r\n    });\r\n  }\r\n  const handleTransmedia = (e) => {\r\n    e.preventDefault();\r\n    setForm({\r\n      ...form,\r\n      transmedia : e.target.value\r\n    });\r\n  }\r\n\r\n  const handleMovieSelect = (index, title) => {\r\n    setSelectedMovie({index: index, title: title});\r\n    console.log(index);\r\n    if (searchResult) {\r\n      setForm({\r\n        ...form,\r\n        title: removeBTags(searchResult[index].title),\r\n        director: searchResult[index].director,\r\n        imageURL: searchResult[index].image,\r\n        actor: searchResult[index].actor,\r\n        userRating: searchResult[index].userRating,\r\n        year: searchResult[index].pubDate\r\n      });\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(form);\r\n    if(sessionStorage.userName) {\r\n      addMovie();\r\n    } else if (sessionStorage.userName === undefined) {\r\n      alert('로그인이 필요합니다!');\r\n      window.location.assign('/MyPage');\r\n    }\r\n  }\r\n\r\n  const addMovie = () => {\r\n    Axios({\r\n      method: 'post',\r\n      url: 'api/movieAdd',\r\n      data: {\r\n        title: form.title,\r\n        director: form.director,\r\n        adderID : sessionStorage.getItem('userID'),\r\n        categoryID: form.category,\r\n        transmediaID: form.transmedia,\r\n        imageURL: form.imageURL,\r\n        actor: form.actor,\r\n        userRating: form.userRating,\r\n        year: form.year\r\n      }\r\n    })\r\n    .then((res) => console.log(res))\r\n    .then(alert(\"영화를 정상적으로 추가했습니다!\"))\r\n    .catch((err) => console.log(err));\r\n  }\r\n\r\n  const removeBTags = (str) => {\r\n    str = str.replace(/<b>/g, \"\");\r\n    return str.replace(/<\\/b>/g, \"\");\r\n  }\r\n\r\n  return (\r\n    <Card className=\"card\">\r\n      <div className=\"formTitle\">\r\n        영화를 추가합니다.\r\n      </div>\r\n      <Divider />\r\n      <form noValidate autoComplete=\"off\" className=\"form\" onSubmit={handleSearch}>\r\n        <Paper component=\"form\" className=\"naverSearch\" variant=\"outlined\">\r\n          <InputBase\r\n            className=\"input\"\r\n            placeholder=\"영화 제목을 입력하세요.\"\r\n            inputProps={{ 'aria-label': 'search' }}\r\n            value={search}\r\n            onChange={handleValueChange}\r\n          />\r\n          <IconButton type=\"submit\" aria-label=\"search\">\r\n            <SearchIcon />\r\n          </IconButton>\r\n        </Paper>\r\n      </form>\r\n\r\n      {isSearched ? \r\n      <div className=\"guide\">\r\n        네이버 영화 검색 결과입니다.<br />\r\n        영화를 선택하고 하단의 양식을 완성해주세요.<br/><br/><br/></div> \r\n      : \"\"}\r\n\r\n      <Grid container spacing={4}>\r\n        {searchResult ?\r\n          searchResult.map((movie, index) => {\r\n            return (\r\n            <Grid item xs={12} md={6}>\r\n              <div className=\"movie\" key={index} onClick={() => handleMovieSelect(index, removeBTags(movie.title))}>\r\n                <Grid item xs={4}>\r\n                  <div className=\"moviePosterAlign\">\r\n                    <img className=\"moviePoster\" src={movie.image} title={removeBTags(movie.title)} \r\n                    alt={removeBTags(movie.title)}/>\r\n                  </div>\r\n                </Grid>\r\n                <Grid item xs={8}>\r\n                  <div className=\"movieTitle\">\r\n                    <span style={{color: 'grey'}}>{index + 1}&nbsp;&nbsp;</span>\r\n                    <span>{removeBTags(movie.title)}\r\n                    <span className=\"movieYear\">{movie.pubDate}</span></span>\r\n                  </div>\r\n                  <div className=\"movieInfo\">\r\n                    <b>감독</b> {movie.director}<br />\r\n                    <b>출연</b> {movie.actor}<br />\r\n                    <b>평점</b> {movie.userRating}\r\n                  </div>\r\n                </Grid>\r\n              </div>\r\n            </Grid>\r\n          )}) : \"\"}\r\n      </Grid>\r\n      \r\n      {isSearched ? \r\n        <form noValidate autoComplete=\"off\" className=\"form\" onSubmit={handleSubmit}>\r\n          <div className=\"guide\"><br/><br/>\r\n            선택한 영화 : &nbsp;{selectedMovie.index + 1}번 &nbsp;<b>{selectedMovie.title}</b>\r\n          </div>\r\n          <div className=\"guide\"><br/>이 영화는 &nbsp;\r\n            <Select labelId=\"demo-simple-select-label\"\r\n              id=\"demo-simple-select\"\r\n              value={form.category}\r\n              onChange={handleCategory}\r\n              name=\"category\"\r\n              style={{fontSize: '1.7rem', fontWeight: '500'}}>\r\n              {category ? category.map(cat => {\r\n                return (\r\n                  <MenuItem value={cat.categoryID} style={{fontSize: '1.7rem', fontWeight: '500'}}>\r\n                    {cat.categoryName}</MenuItem>\r\n                )\r\n              }) : \"error occured\"}\r\n            </Select>\r\n          &nbsp;영화입니다.</div><br />\r\n\r\n          <div className=\"guide\">트랜스미디어</div>\r\n          <Select labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={form.transmedia}\r\n            onChange={handleTransmedia}\r\n            name=\"transmedia\"\r\n            style={{fontSize: '1.7rem', fontWeight: '500'}}>\r\n            {transmedia ? transmedia.map(trans => {\r\n              return (\r\n                <MenuItem value={trans.transmediaID} style={{fontSize: '1.7rem', fontWeight: '500'}}>\r\n                  {trans.transmediaName}</MenuItem>\r\n              )\r\n            }) : \"error occured\"}\r\n          </Select>\r\n\r\n          <Fab variant=\"extended\" className=\"submitBtn\" id=\"movie\" type=\"submit\">추가하기</Fab>\r\n        </form>\r\n      : \"\"}\r\n\r\n    </Card>\r\n  )\r\n}","import React, {useState, useEffect} from 'react';\r\nimport Card from '@material-ui/core/Card';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport SearchIcon from '@material-ui/icons/SearchRounded';\r\nimport InputBase from '@material-ui/core/InputBase';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Axios from 'axios';\r\nimport '../styles/Add.scss';\r\nimport '../styles/Book.scss';\r\n\r\n\r\nexport default function BookAdd() {\r\n  var [search, setSearch] = useState(\"\");\r\n  var [isSearched, setIsSearched] = useState(false);\r\n  var [searchResult, setSearchResult] = useState([]);\r\n  var [selectedBook, setSelectedBook] = useState({\r\n    index: -1,\r\n    title: ''\r\n  });\r\n  var [form, setForm] = useState({\r\n    title: \"\",\r\n    author: \"\",\r\n    category: 100,\r\n    transmedia: 10000,\r\n    imageURL: \"\",\r\n    description: \"\",\r\n  });\r\n  var [category, setCategory] = useState([]);\r\n  var [transmedia, setTransmedia] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetch('/api/categoryDB')\r\n      .then(res => res.json())\r\n      .then(res => setCategory(res))\r\n      .catch(err => console.log(err))\r\n    fetch('/api/transmediaDB')\r\n      .then(res => res.json())\r\n      .then(res => setTransmedia(res))\r\n      .catch(err => console.log(err))\r\n  }, []);\r\n\r\n  const handleValueChange = (e) => {\r\n    e.preventDefault();\r\n    setSearch(e.target.value);\r\n  }\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    console.log(search);\r\n    setIsSearched(true);\r\n    searchBook();\r\n  }\r\n\r\n  const searchBook = () => {\r\n    Axios({\r\n      method: 'get',\r\n      url: '/api/bookSearch/' + search,\r\n    })\r\n    .then(res => setSearchResult(res.data.items))\r\n    .catch(err => console.log(err));\r\n  }\r\n\r\n  const handleCategory = (e) => {\r\n    e.preventDefault();\r\n    setForm({\r\n      ...form,\r\n      category : e.target.value\r\n    });\r\n  }\r\n  const handleTransmedia = (e) => {\r\n    e.preventDefault();\r\n    setForm({\r\n      ...form,\r\n      transmedia : e.target.value\r\n    });\r\n  }\r\n\r\n  const handleBookSelect = (index, title) => {\r\n    console.log(index);\r\n    setSelectedBook({index: index, title: title});\r\n    if (searchResult) {\r\n      setForm({\r\n        ...form,\r\n        title: removeBTags(searchResult[index].title),\r\n        author: searchResult[index].author,\r\n        imageURL: searchResult[index].image,\r\n        description : removeBTags(searchResult[index].description)\r\n      });\r\n    }\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    console.log(form);\r\n    if(sessionStorage.userName) {\r\n      addBook();\r\n    } else if (sessionStorage.userName === undefined) {\r\n      alert('로그인이 필요합니다!');\r\n      window.location.assign('/MyPage');\r\n    }\r\n  }\r\n\r\n  const addBook = () => {\r\n    Axios({\r\n      method: 'post',\r\n      url: 'api/bookAdd',\r\n      data: {\r\n        title: form.title,\r\n        author: form.author,\r\n        adderID : sessionStorage.getItem('userID'),\r\n        categoryID: form.category,\r\n        transmediaID: form.transmedia,\r\n        imageURL: form.image,\r\n        description: form.description,\r\n      }\r\n    })\r\n    .then((res) => console.log(res))\r\n    .then((res) => alert('책을 정상적으로 추가했습니다!'))\r\n    .catch((err) => console.log(err));\r\n  }\r\n\r\n  const removeBTags = (str) => {\r\n    str = str.replace(/<b>/g, \"\");\r\n    return str.replace(/<\\/b>/g, \"\");\r\n  }\r\n\r\n  return (\r\n    <Card className=\"card\">\r\n      <div className=\"formTitle\">\r\n        책을 추가합니다.\r\n      </div>\r\n      <Divider />\r\n      <form noValidate autoComplete=\"off\" className=\"form\" onSubmit={handleSearch}>\r\n        <Paper component=\"form\" className=\"naverSearch\" variant=\"outlined\">\r\n          <InputBase\r\n            className=\"input\"\r\n            placeholder=\"책 제목을 입력하세요.\"\r\n            inputProps={{ 'aria-label': 'search' }}\r\n            value={search}\r\n            onChange={handleValueChange}\r\n          />\r\n          <IconButton type=\"submit\" aria-label=\"search\">\r\n            <SearchIcon />\r\n          </IconButton>\r\n        </Paper>\r\n      </form>\r\n\r\n      {isSearched ? \r\n      <div className=\"guide\">\r\n        네이버 책 검색 결과입니다.<br />\r\n        책을 선택하고 하단의 양식을 완성해주세요.<br/><br/><br/></div> \r\n      : \"\"}\r\n\r\n      <Grid container spacing={4}>\r\n        {searchResult ?\r\n          searchResult.map((book, index) => {\r\n            return (\r\n            <Grid item xs={12}>\r\n              <div className=\"book\" key={index} onClick={() => handleBookSelect(index, removeBTags(book.title))}>\r\n                <Grid item xs={4} md={2}>\r\n                <div className=\"bookCoverAlign\">\r\n                    <img className=\"bookCover\" src={book.image} alt={book.title}/>\r\n                </div>\r\n                </Grid>\r\n                <Grid item xs={8} md={4}>\r\n                    <div className=\"bookTitle\">\r\n                        <span style={{color: 'grey'}}>{index + 1}&nbsp;&nbsp;</span>\r\n                        {removeBTags(book.title)}\r\n                        </div>\r\n                    <div className=\"bookInfo\">\r\n                        <b>작가</b> {book.author}<br />\r\n                    </div>\r\n                </Grid>\r\n                <Grid item xs={12} md={6}>\r\n                    <div className=\"bookDesc\">\r\n                        {removeBTags(book.description)}\r\n                    </div>\r\n                </Grid>\r\n                \r\n              </div>\r\n            </Grid>\r\n          )}) : <div>error occurred</div>}\r\n      </Grid>\r\n\r\n      {isSearched ? \r\n        <form noValidate autoComplete=\"off\" className=\"form\" onSubmit={handleSubmit}>\r\n          <div className=\"guide\"><br/><br/>\r\n            선택한 책 : &nbsp;{selectedBook.index + 1}번 &nbsp;<b>{selectedBook.title}</b>\r\n          </div>\r\n          <div className=\"guide\"><br/>이 책은 &nbsp;\r\n          <Select labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={form.category}\r\n            onChange={handleCategory}\r\n            name=\"category\"\r\n            style={{fontSize: '1.7rem', fontWeight: '500'}}>\r\n            {category ? category.map(cat => {\r\n              return (\r\n                <MenuItem value={cat.categoryID} style={{fontSize: '1.7rem', fontWeight: '500'}}>\r\n                  {cat.categoryName}</MenuItem>\r\n              )\r\n            }) : \"error occured\"}\r\n          </Select>\r\n          &nbsp;책입니다.</div><br />\r\n\r\n          <div className=\"guide\">트랜스미디어</div>\r\n          <Select labelId=\"demo-simple-select-label\"\r\n            id=\"demo-simple-select\"\r\n            value={form.transmedia}\r\n            onChange={handleTransmedia}\r\n            name=\"transmedia\"\r\n            style={{fontSize: '1.7rem', fontWeight: '500'}}>\r\n            {transmedia ? transmedia.map(trans => {\r\n              return (\r\n                <MenuItem value={trans.transmediaID} style={{fontSize: '1.7rem', fontWeight: '500'}}>\r\n                  {trans.transmediaName}</MenuItem>\r\n              )\r\n            }) : \"error occured\"}\r\n          </Select>\r\n\r\n          <Fab variant=\"extended\" className=\"submitBtn\" id=\"book\" type=\"submit\">추가하기</Fab>\r\n        </form>\r\n      : \"\"}\r\n\r\n    </Card>\r\n  )\r\n}","import React, { useState } from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport MusicAdd from './MusicAdd';\r\nimport MovieAdd from './MovieAdd';\r\nimport BookAdd from './BookAdd';\r\nimport Footer from '../footer';\r\nimport '../styles/Content.scss';\r\n\r\n\r\nexport default function PlaylistAdd() {\r\n    const musicContent = {\r\n        title: \"내가 들은 음악 추가하기\",\r\n        component: <MusicAdd />,\r\n        subtitle: \"직접 음악 정보를 입력하여 추가하세요.\"\r\n    };\r\n    const movieContent = {\r\n        title: \"내가 감상한 영화 추가하기\",\r\n        component: <MovieAdd />,\r\n        subtitle: \"네이버 영화에서 검색하여 추가하세요.\"\r\n    };\r\n    const bookContent = {\r\n        title: \"내가 읽은 책 추가하기\",\r\n        component: <BookAdd />,\r\n        subtitle: \"네이버 책에서 검색하여 추가하세요.\"\r\n    };\r\n\r\n    var [content, setContent] = useState(movieContent);\r\n\r\n    const handleMusic = (e) => {\r\n        e.preventDefault();\r\n        setContent(musicContent);\r\n    }\r\n    const handleMovie = (e) => {\r\n        e.preventDefault();\r\n        setContent(movieContent);\r\n    }\r\n    const handleBook = (e) => {\r\n        e.preventDefault();\r\n        setContent(bookContent);\r\n    }\r\n\r\n    return (\r\n        <div className=\"header\">\r\n        <Container maxWidth=\"lg\">\r\n            <Grid container spacing={1}>\r\n                <Grid item xs={9}>\r\n                    <header className=\"title\">{content.title}</header>\r\n                    <p className=\"subtitle\">{content.subtitle}</p>\r\n                </Grid>\r\n                <Grid item xs={3}>\r\n                    <div className=\"btnAlign\">\r\n                    <Fab variant=\"extended\" className=\"mediaBtn\" id=\"music\" onClick = {handleMusic}>\r\n                        음악\r\n                    </Fab>\r\n                    <Fab variant=\"extended\" className=\"mediaBtn\" id=\"movie\" onClick = {handleMovie}>\r\n                        영화\r\n                    </Fab>\r\n                    <Fab variant=\"extended\" className=\"mediaBtn\" id=\"book\" onClick = {handleBook}>\r\n                        책\r\n                    </Fab>\r\n                    </div>\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n        <Divider className=\"divider\" />\r\n        <Container maxWidth=\"lg\">\r\n            {content.component}\r\n        </Container>\r\n            <Footer />\r\n        </div>\r\n    )\r\n}","import { createStore } from 'redux';\r\n\r\nexport default createStore((state, action) => {\r\n  if(state === undefined) {\r\n    return {userName: ''};\r\n  }\r\n  if(action.type === 'LOGINED'){\r\n    return {...state, userName: action.userName};\r\n  }\r\n}, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())","import React, { useState } from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport { Grid, Card, TextField } from '@material-ui/core';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Axios from 'axios';\r\nimport store from './store';\r\nimport './styles/Content.scss';\r\nimport './styles/Login.scss';\r\n\r\n\r\nexport default function Login() {\r\n    var [login, setLogin] = useState({\r\n        userName: \"\",\r\n        userPassword: \"\",\r\n    })\r\n    var [register, setRegister] = useState({\r\n        userName: \"\",\r\n        userPassword: \"\",\r\n    });\r\n\r\n    const InputProps = { style: { fontSize: '2rem' } };\r\n    const InputLabelProps = { style: { fontSize: '1.7rem', color: 'primary' } }\r\n    const InputLabelProps2 = { style: { fontSize: '1.7rem', color: \"secondary\" } }\r\n\r\n    const handleLoginInput = (e) => {\r\n        e.preventDefault();\r\n        let nextState = login;\r\n        nextState[e.target.name] = e.target.value;\r\n        setLogin(nextState);\r\n    }\r\n    const handleLoginSubmit = (e) => {\r\n        e.preventDefault();\r\n        loginProcess();\r\n    }\r\n    const loginProcess = () => {\r\n        Axios({\r\n            method: 'post',\r\n            url: '/api/login_process',\r\n            data: {\r\n                userName: login.userName,\r\n                userPassword: login.userPassword\r\n            }\r\n        })\r\n        .then((res) => {\r\n            alert('로그인을 성공했습니다!');\r\n            if (res.data.code === 200) {\r\n                console.log(res.data)\r\n                store.dispatch({ type: 'LOGINED', userName: login.userName });\r\n                sessionStorage.setItem('userName', login.userName);\r\n                sessionStorage.setItem('userID', res.data.userID);\r\n            }\r\n            window.location.assign('/MyPage');\r\n        })\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    //////Register\r\n    const handleRegisterInput = (e) => {\r\n        e.preventDefault();\r\n        let nextState = register;\r\n        nextState[e.target.name] = e.target.value;\r\n        setRegister(nextState);\r\n    }\r\n\r\n    const handleRegisterSubmit = (e) => {\r\n        e.preventDefault();\r\n        registerProcess();\r\n    }\r\n\r\n    const registerProcess = () => {\r\n        Axios({\r\n            method: 'post',\r\n            url: '/api/register',\r\n            data: {\r\n                userName: register.userName,\r\n                userPassword: register.userPassword\r\n            }\r\n        })\r\n        .then((res) => alert('회원가입을 축하드립니다!'))\r\n        .catch((err) => console.log(err));\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Container maxWidth=\"lg\" className=\"header\">\r\n                <div className=\"title\">함께하기</div>\r\n            </Container>\r\n            <Divider className=\"divider\" />\r\n            <Container maxWidth=\"lg\">\r\n                <Grid container spacing={3}>\r\n                    <Grid item xs={12} md={6}>\r\n                        <Card className=\"loginCard\">\r\n                            <div className=\"subtitle\">\r\n                                가입한 계정이 있으신가요?\r\n                            </div>\r\n                            <Divider className=\"loginDivider\" />\r\n                            <form noValidate autoComplete=\"off\" className=\"loginForm\" onSubmit={handleLoginSubmit}>\r\n                                <TextField id=\"outlined-basic\" label=\"아이디\" name=\"userName\"\r\n                                    InputProps={InputProps}\r\n                                    InputLabelProps={InputLabelProps}\r\n                                    onChange={handleLoginInput} \r\n                                /><br />\r\n                                <TextField\r\n                                    id=\"standard-password-input\"\r\n                                    label=\"패스워드\"\r\n                                    name=\"userPassword\"\r\n                                    type=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                    inputProps={InputProps}\r\n                                    InputLabelProps={InputLabelProps}\r\n                                    onChange={handleLoginInput}\r\n                                />\r\n                                <Fab variant=\"extended\" className=\"submitButton\" type=\"submit\" id=\"login\">\r\n                                    로그인</Fab>\r\n                            </form>\r\n                        </Card>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <Card className=\"loginCard\">\r\n                            <div className=\"subtitle\">\r\n                                <span style={{ fontFamily: 'Samsung' }}>PlayLab</span>에 처음 오셨나요?\r\n                            </div>\r\n                            <Divider className=\"loginDivider\" />\r\n\r\n                            <form noValidate autoComplete=\"off\" className=\"loginForm\" onSubmit={handleRegisterSubmit}>\r\n                                <TextField id=\"outlined-basic\" label=\"아이디\" name=\"userName\"\r\n                                    InputProps={InputProps}\r\n                                    InputLabelProps={InputLabelProps2}\r\n                                    onChange={handleRegisterInput}\r\n                                /><br />\r\n                                <TextField\r\n                                    id=\"standard-password-input\"\r\n                                    label=\"패스워드\"\r\n                                    name=\"userPassword\"\r\n                                    type=\"password\"\r\n                                    autoComplete=\"current-password\"\r\n                                    inputProps={InputProps}\r\n                                    InputLabelProps={InputLabelProps2}\r\n                                    onChange={handleRegisterInput}\r\n                                />\r\n                                <Fab variant=\"extended\" className=\"submitButton\" type=\"submit\" id=\"register\">\r\n                                    회원가입</Fab>\r\n                            </form>\r\n                        </Card>\r\n                    </Grid>\r\n                </Grid>\r\n            </Container>\r\n\r\n        </div>\r\n\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\nimport Axios from 'axios';\r\nimport '../styles/Content.scss';\r\nimport '../styles/Table.scss';\r\n\r\n\r\nexport default function MyMusic(props) {\r\n  var [myMusic, setMyMusic] = useState([]);\r\n\r\n  const getDB = () => {\r\n    Axios({\r\n      method: 'post',\r\n      url: '/api/myPage/music',\r\n      data: {\r\n        userName: sessionStorage.userName\r\n      }\r\n    })\r\n    .then(res => setMyMusic(res.data))\r\n    .catch(err => console.log(err));\r\n  }\r\n\r\n  useEffect(() => {\r\n    getDB();\r\n  }, []);\r\n\r\n  const handleDeletion = (id) => {\r\n    console.log(id);\r\n    const urlWithID = '/api/myPage/delete/' + id;\r\n    Axios({\r\n      method: 'DELETE',\r\n      url: urlWithID,\r\n    })\r\n    .then(res => {\r\n      if(res.status === 200){\r\n        alert('정상적으로 삭제되었습니다');\r\n        getDB();\r\n      }\r\n    })\r\n    .catch(err => console.log(err));\r\n  }\r\n\r\n  return (\r\n    <div className=\"table\">\r\n      <TableContainer className=\"tableContainer\">\r\n      <Table stickyHeader aria-label=\"sticky table\">\r\n        <TableBody>\r\n        {myMusic ? myMusic.map((datum, index) => {\r\n        return (\r\n          <TableRow>\r\n            <TableCell className=\"tableData\">\r\n                <span className=\"title\">{datum.title}</span><br></br>{datum.artist}\r\n            </TableCell>\r\n            <TableCell className=\"tableData\" style={{minWidth:\"12rem\"}}>\r\n              {datum.categoryName} 음악\r\n            </TableCell>\r\n            <TableCell className=\"tableData\" style={{maxWidth:\"5rem\"}}>\r\n              <div className=\"btnAlign\">\r\n                <Button color=\"secondary\" className=\"deletion\"\r\n                onClick={() => {handleDeletion(datum.musicID)}}>\r\n                삭제</Button>\r\n              </div>\r\n            </TableCell>\r\n          </TableRow>\r\n        )\r\n        }) : <div>error</div>}\r\n        </TableBody>\r\n      </Table>\r\n      </TableContainer>\r\n    </div>\r\n    \r\n  )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\nimport Axios from 'axios';\r\nimport '../styles/Content.scss';\r\nimport '../styles/Table.scss';\r\n\r\n\r\nexport default function MyMovie(props) {\r\n  var [myMovie, setMyMovie] = useState([]);\r\n\r\n  const getDB = () => {\r\n    Axios({\r\n      method: 'post',\r\n      url: '/api/myPage/movie',\r\n      data: {\r\n        userName: sessionStorage.userName\r\n      }\r\n    })\r\n    .then(res => setMyMovie(res.data))\r\n    .catch(err => console.log(err));\r\n  }\r\n\r\n  useEffect(() => {\r\n    getDB();\r\n  }, []);\r\n\r\n  const handleDeletion = (id) => {\r\n    console.log(id);\r\n    const urlWithID = '/api/myPage/delete/' + id;\r\n    Axios({\r\n      method: 'DELETE',\r\n      url: urlWithID,\r\n    })\r\n    .then(res => {\r\n      if(res.status === 200){\r\n        alert('정상적으로 삭제되었습니다');\r\n        getDB();\r\n      }\r\n    })\r\n    .catch(err => console.log(err));\r\n  }\r\n\r\n  return (\r\n    <div className=\"table\">\r\n      <TableContainer className=\"tableContainer\">\r\n      <Table stickyHeader aria-label=\"sticky table\">\r\n        <TableBody>\r\n        {myMovie ? myMovie.map((datum, index) => {\r\n        return (\r\n          <TableRow>\r\n            <TableCell className=\"tableData\">\r\n                <span className=\"title\">{datum.title}</span><br></br>{datum.director}\r\n                <br></br>{datum.actor}\r\n            </TableCell>\r\n            <TableCell className=\"tableData\" style={{minWidth:\"12rem\"}}>\r\n              {datum.categoryName} 영화\r\n            </TableCell>\r\n            <TableCell className=\"tableData\" style={{maxWidth:\"5rem\"}}>\r\n              <div className=\"btnAlign\">\r\n                <Button color=\"secondary\" className=\"deletion\"\r\n                onClick={() => {handleDeletion(datum.movieID)}}>\r\n                삭제</Button>\r\n              </div>\r\n            </TableCell>\r\n          </TableRow>\r\n        )\r\n        }) : <div>error</div>}\r\n        </TableBody>\r\n      </Table>\r\n      </TableContainer>\r\n    </div>\r\n    \r\n  )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\nimport Axios from 'axios';\r\nimport '../styles/Content.scss';\r\nimport '../styles/Table.scss';\r\n\r\n\r\nexport default function Mybook(props) {\r\n  var [myBook, setMyBook] = useState([]);\r\n\r\n  const getDB = () => {\r\n    Axios({\r\n      method: 'post',\r\n      url: '/api/myPage/book',\r\n      data: {\r\n        userName: sessionStorage.userName\r\n      }\r\n    })\r\n    .then(res => setMyBook(res.data))\r\n    .catch(err => console.log(err));\r\n  }\r\n\r\n  useEffect(() => {\r\n    getDB();\r\n  }, []);\r\n\r\n  const handleDeletion = (id) => {\r\n    console.log(id);\r\n    const urlWithID = '/api/myPage/delete/' + id;\r\n    Axios({\r\n      method: 'DELETE',\r\n      url: urlWithID,\r\n    })\r\n    .then(res => {\r\n      if(res.status === 200){\r\n        alert('정상적으로 삭제되었습니다');\r\n        getDB();\r\n      }\r\n    })\r\n    .catch(err => console.log(err));\r\n  }\r\n\r\n  return (\r\n    <div className=\"table\">\r\n      <TableContainer className=\"tableContainer\">\r\n      <Table stickyHeader aria-label=\"sticky table\">\r\n        <TableBody>\r\n        {myBook ? myBook.map((datum, index) => {\r\n        return (\r\n          <TableRow>\r\n            <TableCell className=\"tableData\">\r\n                <span className=\"title\">{datum.title}</span><br></br>{datum.author}\r\n            </TableCell>\r\n            <TableCell className=\"tableData\" style={{minWidth:\"12rem\"}}>\r\n              {datum.categoryName} 책\r\n            </TableCell>\r\n            <TableCell className=\"tableData\" style={{maxWidth:\"5rem\"}}>\r\n              <div className=\"btnAlign\">\r\n                <Button color=\"secondary\" className=\"deletion\"\r\n                onClick={() => {handleDeletion(datum.bookID)}}>\r\n                삭제</Button>\r\n              </div>\r\n            </TableCell>\r\n          </TableRow>\r\n        )\r\n        }) : <div>error</div>}\r\n        </TableBody>\r\n      </Table>\r\n      </TableContainer>\r\n    </div>\r\n    \r\n  )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport Container from '@material-ui/core/Container';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\nimport AccountCircleRoundedIcon from '@material-ui/icons/AccountCircleRounded';\r\nimport Login from '../Login';\r\nimport Axios from 'axios';\r\nimport MyMusic from './MyMusic';\r\nimport MyMovie from './MyMovie';\r\nimport MyBook from './MyBook';\r\nimport Footer from '../footer';\r\nimport '../styles/Content.scss';\r\nimport '../styles/MyPage.scss';\r\n\r\n\r\nexport default function MyPage() {\r\n  const musicContent = {\r\n    component: <MyMusic />, \r\n    subtitle: <div className=\"myPageSubtitle\" id=\"myPageMusicSub\">내가 추가한 음악 관리하기</div>\r\n  };\r\n  const movieContent = {\r\n    component: <MyMovie />,\r\n    subtitle: <div className=\"myPageSubtitle\" id=\"myPageMovieSub\">내가 추가한 영화 관리하기</div>\r\n  };\r\n  const bookContent = {\r\n    component: <MyBook />, \r\n    subtitle: <div className=\"myPageSubtitle\" id=\"myPageBookSub\">내가 추가한 책 관리하기</div>\r\n  };\r\n\r\n  var [user, setUser] = useState('');\r\n  var [userInfo, setUserInfo] = useState({});\r\n  var [content, setContent] = useState(movieContent);\r\n\r\n  useEffect(() => {\r\n    if(sessionStorage.userName){\r\n      setUser(sessionStorage.userName);\r\n    }\r\n\r\n    Axios({\r\n      method: 'post',\r\n      url: '/api/myPage/',\r\n      data: {\r\n        userName: sessionStorage.userName\r\n      }\r\n    })\r\n    .then(res => setUserInfo(res.data[0]))\r\n    .catch(err => console.log(err));\r\n  }, []);\r\n\r\n  const handleLogout = () => {\r\n    sessionStorage.removeItem('userName');\r\n    sessionStorage.removeItem('userID');\r\n    setUser('');\r\n    Axios({\r\n      method:'get',\r\n      url: '/api/logout',\r\n      data: {'logout' : true}\r\n    })\r\n    .then(alert('로그아웃 했습니다.'))\r\n    .then(setUser(''))\r\n    .catch(err => console.log(err));\r\n  }\r\n  \r\n  const myPage = () => {\r\n    return (\r\n      <div className=\"header\">\r\n        <Container maxWidth=\"lg\">\r\n          <Grid container spacing={1}>\r\n            <Grid item xs={6}>\r\n              <div className=\"title\">마이 페이지</div>\r\n            </Grid>\r\n            <Grid item xs={6}>\r\n              <div className=\"btnAlign\">\r\n                <Fab variant=\"extended\" className=\"logoutBtn\"\r\n                onClick = {handleLogout}>\r\n                  로그아웃\r\n                </Fab>\r\n              </div>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Paper className=\"myPage\" elevation={5}>\r\n            <div className=\"accountIconAlign\">\r\n              <AccountCircleRoundedIcon className=\"accountIcon\"/>\r\n            </div>\r\n            <div className=\"userName\">\r\n              {userInfo.userName}\r\n            </div>\r\n            <p className=\"userDescription\">\r\n              {userInfo.description}\r\n            </p>\r\n\r\n            <Button className=\"btnGroup\" onClick={() => {setContent(musicContent)}}>\r\n              음악</Button>\r\n            <Button className=\"btnGroup\" onClick={() => {setContent(movieContent)}}>\r\n              영화</Button>\r\n            <Button className=\"btnGroup\" onClick={() => {setContent(bookContent)}}>\r\n              책</Button>\r\n            \r\n            <Divider />\r\n            {content.subtitle}\r\n            {content.component}\r\n            </Paper>\r\n        </Container>\r\n      </div>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      {(user === '') ? <Login /> : myPage()}\r\n      <Footer />\r\n    </div>\r\n  )\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { MuiThemeProvider, createMuiTheme} from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n    typography: {\r\n        fontFamily: '-apple-system, BlinkMacSystemFont, \"Noto Sans KR\", \"Roboto\", serif',\r\n    },\r\n    palette: {\r\n        primary: {\r\n            main: '#000000',\r\n        },\r\n        secondary: {\r\n            main: '#FE6B8B',\r\n            light: '#FE8D8B',\r\n            contrastText: '#017274',\r\n        },\r\n    }\r\n});\r\n\r\nReactDOM.render(<MuiThemeProvider theme={theme}><App /></MuiThemeProvider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport AppBar from \"./components/AppBar\";\r\nimport Home from \"./components/Home\";\r\nimport Search from \"./components/Search/Search\";\r\nimport Popular from \"./components/Popular/Popular\";\r\nimport PlaylistAdd from \"./components/PlaylistAdd/PlaylistAdd\";\r\nimport MyPage from \"./components/MyPage/MyPage\";\r\nimport Login from \"./components/Login\";\r\n/* import { TransitionGroup, CSSTransition } from 'react-transition-group'; */\r\n\r\nexport default function App() {\r\n  return (\r\n    <Router>\r\n      <AppBar />\r\n      <Route exact path=\"/\" component={Home} />\r\n      <Route path=\"/Search\" component={Search} />\r\n      <Route path=\"/Popular\" component={Popular} />\r\n      <Route path=\"/PlaylistAdd\" component={PlaylistAdd} />\r\n      <Route path=\"/MyPage\" component={MyPage} />\r\n      <Route path=\"/Login\" component={Login} />\r\n    </Router>\r\n  )\r\n}\r\n"],"sourceRoot":""}